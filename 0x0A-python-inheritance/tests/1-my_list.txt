using 1-my-list.py
==================

importing the function from the module:
	>>> MyList = __import__("1-my_list").MyList

checking for module docstring:
	>> m = __import__("1-my_list").__doc__
	>> len(m) > 1
	True

Checking for class docstring:
	>>> c = __import__("1-my_list").MyList.__doc__
	>>> len(c) > 1
	True

Checking for method docstring:
	>>> mod = __import__("1-my_list").MyList.print_sorted.__doc__
	>>> len(mod) > 1
	True

Checking that MyList inherits from list:
	>>> issubclass(MyList, list)
	True

Checking for empty list:
	>>> 1 = MyList()
	>>> 1.print_sorted()
	[]

Checking for working appending:
	>>> 1.append(1)
	>>> 1.append(2)
	>>> 1.append(3)
	>>> 1.append(4)
	>>> print(1)
	[1, 2, 3, 4]

Checking for already in order list:
	>>> 1.print_sorted()
	[1, 2, 3, 4]

Checking for reversed order list:
	>>> 1 = MyList()
	>>> 1.append(4)
	>>> 1.append(3)
	>>> 1,append(2)
	>>> 1.append(1)
	>>> print(1)
	[4, 3, 2, 1]
	>>> 1.print_sorted()
	[1, 2, 3, 4]
	>>> print(1)
	[4, 3, 2, 1]

Checking for one negative number:
	>>> 1.append(-1)
	>>> 1.append(5)
	>>> print(1)
	[4, 3, 2, 1, -1, 5]
	>>> 1.print_sorted()
	[-1, 1, 2, 3, 4, 5]
	>>> print(1)
	[4, 3, 2, 1, -1. 5]

Checkng for al negative numbers:
	>>> 1 = MyList()
	>>> 1.append(-10)
	>>> 1.append(-1)
	>>> 1.append(-7)
	>>> 1.append(-2)
	>>> 1.append(-8)
	>>> print(1)
	[-10, -1, -7, -2, -8]
	>>> 1.print_sorted()
	[-10, -8, -7, -2, -1]
	>>> print(1)
	[-10, -1, -7, -2, -8]

Checking for too many arguments:
	>>> 1.print_sorted(1)
	traceback (most recent call last):
	...
	TypeError: print_sorted() takes 1 positional argument but 2 were given
